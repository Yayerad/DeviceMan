/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package DevMonitor;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Yaye
 */
public class Students extends javax.swing.JFrame {

    /**
     * Creates new form Student
     */
    public Students() {
        initComponents();
        this.setLocationRelativeTo(null);//to center the frame
    }
    String PopulateQuery = "SELECT * FROM tblStudent";
    public void clear(){
        txtStudentName.setText(" "); //Set field empty
        txtStudentSurname.setText(""); //set field empty
        txtStudentID.setText("");
        txtStudentGrade.setText(" ");
        chbxDeparted.setSelected(false);
    }
    
    //This allows the jtable to refresh and include the newly added record
    public void refresh(){
            try {
                LogIn.dbman.Display(tblStudent,PopulateQuery);
            } catch (SQLException ex) {
                Logger.getLogger(Devices.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println("Error: "+ ex);
            }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlHead = new javax.swing.JPanel();
        txtUserOutput = new javax.swing.JLabel();
        btnHelp = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        cbxSort = new javax.swing.JComboBox<>();
        btnBack = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStudent = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        lblEdit = new javax.swing.JLabel();
        txtStudentName = new javax.swing.JTextField();
        txtStudentSurname = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        lblSurname = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnhelp1 = new javax.swing.JButton();
        txtStudentID = new javax.swing.JTextField();
        lblAdmin = new javax.swing.JLabel();
        btnRemove = new javax.swing.JButton();
        txtStudentGrade = new javax.swing.JTextField();
        lblUsername = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        lblDeparted = new javax.swing.JLabel();
        chbxDeparted = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        btnSearch1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlHead.setBackground(new java.awt.Color(0, 0, 102));
        pnlHead.setForeground(new java.awt.Color(0, 0, 102));
        pnlHead.setLayout(null);

        txtUserOutput.setFont(new java.awt.Font("Tribeca", 0, 24)); // NOI18N
        txtUserOutput.setForeground(new java.awt.Color(255, 255, 51));
        txtUserOutput.setText("            Students");
        pnlHead.add(txtUserOutput);
        txtUserOutput.setBounds(424, 0, 498, 51);

        btnHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/help.png"))); // NOI18N
        btnHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHelpActionPerformed(evt);
            }
        });
        pnlHead.add(btnHelp);
        btnHelp.setBounds(1160, 20, 40, 30);

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        pnlHead.add(btnRefresh);
        btnRefresh.setBounds(1070, 20, 80, 30);

        getContentPane().add(pnlHead, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1220, 75));

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });
        getContentPane().add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(352, 565, 293, -1));

        cbxSort.setMaximumRowCount(4);
        cbxSort.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Name", "Surname", "Grade", "Departed" }));
        cbxSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxSortActionPerformed(evt);
            }
        });
        getContentPane().add(cbxSort, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 560, 112, 32));

        btnBack.setText("<<Back<<");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        getContentPane().add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 553, 109, 44));

        tblStudent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "StudentID", "Name", "Surname", "Grade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblStudent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblStudentMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblStudent);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(333, 81, 887, 470));

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));

        lblEdit.setBackground(new java.awt.Color(20, 70, 15));
        lblEdit.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        lblEdit.setText("Add or remove an Student");

        txtStudentName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStudentNameActionPerformed(evt);
            }
        });

        txtStudentSurname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStudentSurnameActionPerformed(evt);
            }
        });

        lblName.setText(" Name");

        lblSurname.setText("Surname");

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnhelp1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/help.png"))); // NOI18N
        btnhelp1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhelp1ActionPerformed(evt);
            }
        });

        lblAdmin.setText("StudentID");

        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        txtStudentGrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStudentGradeActionPerformed(evt);
            }
        });

        lblUsername.setText("Grade");

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        lblDeparted.setText("Departed");

        jButton1.setText("Clear");
        jButton1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 280, Short.MAX_VALUE)
                        .addComponent(btnhelp1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblName)
                    .addComponent(lblAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUsername)
                    .addComponent(lblSurname)
                    .addComponent(lblDeparted))
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chbxDeparted)
                    .addComponent(txtStudentGrade, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtStudentName, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtStudentSurname, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnRemove)
                        .addGap(52, 52, 52)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnUpdate)))
                .addGap(22, 22, 22))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(lblEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAdmin))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtStudentName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblName))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtStudentSurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSurname, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtStudentGrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chbxDeparted)
                    .addComponent(lblDeparted))
                .addGap(34, 34, 34)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnhelp1))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 81, -1, 516));

        btnSearch1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/search.png"))); // NOI18N
        btnSearch1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearch1ActionPerformed(evt);
            }
        });
        getContentPane().add(btnSearch1, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 560, 40, 30));

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 14)); // NOI18N
        jLabel6.setText("SORT BY:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 560, -1, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHelpActionPerformed
        JOptionPane.showMessageDialog(null,"Here you can see and edit details of a student or add a new one. "
                + "\nUse the drop down box to sort table by a column header of your choice. "
                + "\nYou can also type a name or Surname into the search bar and press the search button to find their record.");
    }//GEN-LAST:event_btnHelpActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void txtSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyPressed
        // To search for a record
        
    }//GEN-LAST:event_txtSearchKeyPressed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchKeyReleased

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        this.setVisible(false);

        Home home = new Home ();
        home.setVisible(true); //Goes back to home
    }//GEN-LAST:event_btnBackActionPerformed

    private void tblStudentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblStudentMouseClicked
         // This puts the details of the selected record into the textfields
        int row =tblStudent.getSelectedRow();
         String  SID =tblStudent.getModel().getValueAt(row,0).toString();
         String  Name =tblStudent.getModel().getValueAt(row,1).toString();
         String  Surname =tblStudent.getModel().getValueAt(row,2).toString();
         String  StudentGrade =tblStudent.getModel().getValueAt(row,3).toString();
         Object Departed = (boolean) tblStudent.getModel().getValueAt(row,4);
        
         txtStudentID.setText(String.valueOf(SID));
            txtStudentName.setText(Name);
            txtStudentSurname.setText(Surname);
            txtStudentGrade.setText(StudentGrade);
            chbxDeparted.setSelected((boolean) Departed);
        
//        Student[] student;
//        try {
//            //Setting text fields with appropriate details of selected record
//            student = LogIn.dbman.getStudent();
//            txtStudentID.setText(String.valueOf(student[row].getStudentID()));
//            txtStudentName.setText(student[row].getName());
//            txtStudentSurname.setText(student[row].getSurname());
//            txtStudentGrade.setText(String.valueOf(student[row].getGrade()));
//            chbxDeparted.setSelected(student[row].isDeparted());
//            
//        } catch (SQLException ex) {
//            Logger.getLogger(Devices.class.getName()).log(Level.SEVERE, null, ex);
//            System.out.println("Error: "+ ex);
//        }
        
    }//GEN-LAST:event_tblStudentMouseClicked

    private void txtStudentNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStudentNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStudentNameActionPerformed

    private void txtStudentSurnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStudentSurnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStudentSurnameActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        //Makes sure no field is left empty
        if(txtStudentName.getText().isEmpty() || txtStudentSurname.getText().isEmpty() ){
            JOptionPane.showMessageDialog(null,"Please enter new administrator's details. Admin ID is set Automatically");
        }
        else{
            try {
                LogIn.dbman.addStudent(txtStudentName.getText(), txtStudentSurname.getText(),txtStudentGrade.getText(),chbxDeparted.isSelected());
                JOptionPane.showMessageDialog(null,"Record added successfull" );
                clear();

            } catch (SQLException ex) {
                Logger.getLogger(Devices.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println("Error: "+ex);
            }
             refresh();
            
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnhelp1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhelp1ActionPerformed
        JOptionPane.showMessageDialog(null,"Adding a new record: Enter the device name and type in the fields provided and press 'Add' \n"
            + "Removing a record: Enter DeviceID of the record you want to remove. You can make use of the search bar \n"
            +"Updating a record: simply select a record and its details will be filled in the text boxes, afterwards edit the fields you want to change\n"
            +"Note: DeviceID is generated automatically and user input will be ignored for the adding of a record"
        );
    }//GEN-LAST:event_btnhelp1ActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        //if field is empty
        if(txtStudentID.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Please enter the device id. You can\n"
                + " make use of the search bar to find the specific record you are looking for");
        }
        else {
            try {  
               //Warns the user of deletion in tblBorrowings
               int a= JOptionPane.showConfirmDialog(null, " Deleting this Student would also delete all records associated with them.\n"
                                          + "If this Student cannot borrow anymore, you can simply tick the Departed checkbox.\n"
                                          + "Do you want continue to delete this Student and all their records? ","Warning", JOptionPane.YES_NO_OPTION);  
                //if they select yes, delete and if not do nothing     
                 if(a==0){
                LogIn.dbman.RemoveStudent(txtStudentID.getText());
                refresh();        //This allows the jtable to refresh and include the newly added record
                JOptionPane.showMessageDialog(null,"Record removed successfull" );
                clear(); //sets fields empty
                 }
            } catch (SQLException ex) {
                Logger.getLogger(Devices.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println("Error: "+ ex);
            }

        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void txtStudentGradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStudentGradeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStudentGradeActionPerformed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
       
        
    }//GEN-LAST:event_formMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        //to populate table as soon as frame opens 
        refresh();
    }//GEN-LAST:event_formWindowOpened

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed

        if(txtStudentID.getText().isEmpty() || txtStudentName.getText().isEmpty() || txtStudentSurname.getText().isEmpty() 
                || txtStudentGrade.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Please fill in all the details of the students");
        }
        else{
            try {
                LogIn.dbman.updateStudentInfo(txtStudentID.getText(),txtStudentName.getText(), txtStudentSurname.getText(),txtStudentGrade.getText(),chbxDeparted.isSelected());
                refresh();      //displays data from database and also refreshes the jTable to include newly made Changes
                JOptionPane.showMessageDialog(null,"Record updated successfully" );
                clear();
            } catch (SQLException ex) {
                Logger.getLogger(Devices.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cbxSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxSortActionPerformed
        //Sorts table based on what is chosen on combo box
        try {
        if(cbxSort.getSelectedItem()== "Name"){
          
           
                LogIn.dbman.Sort(tblStudent,"tblStudent", "StudentName");
            
        }
            else if(cbxSort.getSelectedItem()== "Surname"){
                LogIn.dbman.Sort(tblStudent,"tblStudent", "StudentSurname");
             
        }
            else if(cbxSort.getSelectedItem()== "Grade"){
                 LogIn.dbman.Sort(tblStudent,"tblStudent", "StudentGrade");
            
            }
            else if(cbxSort.getSelectedItem()== "Departed"){
                LogIn.dbman.Sort(tblStudent,"tblStudent", "Departed");
             
            }
        } catch (SQLException ex) {
                Logger.getLogger(Administrators.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_cbxSortActionPerformed

    private void btnSearch1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearch1ActionPerformed
        //Checks if search bar is not empty then searches for what is entered
        if(txtSearch.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please enter something in the search box before pressing this button");
        }
        else{
            try {
                LogIn.dbman.SearchStudent(tblStudent, txtSearch.getText());
            } catch (SQLException ex) {
                Logger.getLogger(Students.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        

    }//GEN-LAST:event_btnSearch1ActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        refresh();
    }//GEN-LAST:event_btnRefreshActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Students.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Students.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Students.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Students.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Students().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnHelp;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnSearch1;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnhelp1;
    private javax.swing.JComboBox<String> cbxSort;
    private javax.swing.JCheckBox chbxDeparted;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAdmin;
    private javax.swing.JLabel lblDeparted;
    private javax.swing.JLabel lblEdit;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblSurname;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JPanel pnlHead;
    private javax.swing.JTable tblStudent;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtStudentGrade;
    private javax.swing.JTextField txtStudentID;
    private javax.swing.JTextField txtStudentName;
    private javax.swing.JTextField txtStudentSurname;
    private javax.swing.JLabel txtUserOutput;
    // End of variables declaration//GEN-END:variables
}
