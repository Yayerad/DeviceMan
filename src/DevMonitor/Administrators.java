/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package DevMonitor;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static oracle.jrockit.jfr.events.Bits.intValue;

/**
 *
 * @author Yaye
 */
public class Administrators extends javax.swing.JFrame {

    String PopulateQuery = "SELECT * FROM tblAdmin;";
    String cbox="";
    
    public Administrators() {
        initComponents();
         this.setLocationRelativeTo(null);//to center the frame
    }
    

    //gets user type in creation of an admin account from combobox
    public int getUserType(){
        int UserType=3;
        switch (cbxUserType.getSelectedItem().toString()) {
            case "1.Chief Admininstrator":
                UserType=1;
                cbox= "1.Chief Admininstrator";
                break;
            case "2.Admin/Supervisor":
                UserType=2;
                 cbox= "2.Admin/Supervisor";
                break;
            case "3.Teacher":
                UserType=3;
                cbox= "3.Teacher";
                break;
        }
        return UserType;
    }
    //To clear all fields
    public void clear(){
        txtSearch.setText("");
        txtAdminName.setText("");
        txtAdminSurname.setText("");
        txtUsername.setText("");
        txtPassword.setText("");
        txtAdminID.setText("");
    }
  //This populates the table again thereby also refreshing it
    public void refresh(){
        try {
            LogIn.dbman.Display(tblAdmins,PopulateQuery);
        } catch (SQLException ex) {
            Logger.getLogger(Administrators.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblEdit = new javax.swing.JLabel();
        txtAdminName = new javax.swing.JTextField();
        txtAdminSurname = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        lblSurname = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnhelp1 = new javax.swing.JButton();
        txtAdminID = new javax.swing.JTextField();
        lblAdmin = new javax.swing.JLabel();
        btnRemove = new javax.swing.JButton();
        txtUsername = new javax.swing.JTextField();
        lblUsername = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        lblUserType = new javax.swing.JLabel();
        cbxUserType = new javax.swing.JComboBox<>();
        btnUpdate = new javax.swing.JButton();
        chbxDeactivate = new javax.swing.JCheckBox();
        lblDeactivate = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        lblEdit1 = new javax.swing.JLabel();
        cBoxSort = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAdmins = new javax.swing.JTable();
        pnlHead = new javax.swing.JPanel();
        txtUserOutput = new javax.swing.JLabel();
        btnHelp = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        btnRefresh = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        btnSearch1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));

        lblEdit.setBackground(new java.awt.Color(20, 70, 15));
        lblEdit.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        lblEdit.setText("Add, Remove or Edit Details of an  ");

        txtAdminName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAdminNameActionPerformed(evt);
            }
        });

        txtAdminSurname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAdminSurnameActionPerformed(evt);
            }
        });

        lblName.setText(" Name");

        lblSurname.setText("Surname");

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnhelp1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/help.png"))); // NOI18N
        btnhelp1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhelp1ActionPerformed(evt);
            }
        });

        lblAdmin.setText("Admin ID");

        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        txtUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsernameActionPerformed(evt);
            }
        });

        lblUsername.setText("Username");

        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });

        lblPassword.setText("Password");

        lblUserType.setText("User Type");

        cbxUserType.setMaximumRowCount(3);
        cbxUserType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1.Chief Admininstrator", "2.Admin/Supervisor", "3.Teacher" }));
        cbxUserType.setToolTipText("");
        cbxUserType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxUserTypeActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        lblDeactivate.setText("Deactivate");

        jButton1.setText("Clear");
        jButton1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lblEdit1.setBackground(new java.awt.Color(20, 70, 15));
        lblEdit1.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        lblEdit1.setText("Admininstrator  ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblUserType)
                            .addComponent(lblName)
                            .addComponent(lblAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPassword)
                            .addComponent(lblUsername)
                            .addComponent(lblSurname)
                            .addComponent(lblDeactivate))
                        .addGap(50, 50, 50)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chbxDeactivate)
                            .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtAdminName, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtAdminID, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtAdminSurname, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(txtPassword, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cbxUserType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(btnRemove)
                        .addGap(33, 33, 33)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(btnUpdate)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 280, Short.MAX_VALUE)
                        .addComponent(btnhelp1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(lblEdit1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(lblEdit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblEdit1)
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAdminID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAdmin))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAdminName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblName))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAdminSurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSurname, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUserType, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxUserType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chbxDeactivate)
                    .addComponent(lblDeactivate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnRemove)
                    .addComponent(btnUpdate))
                .addGap(18, 18, 18)
                .addComponent(btnhelp1)
                .addGap(29, 29, 29))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 78, -1, 543));

        cBoxSort.setMaximumRowCount(3);
        cBoxSort.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Name", "Surname", "UserType", "Deactivate" }));
        cBoxSort.setName("SORT"); // NOI18N
        cBoxSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cBoxSortActionPerformed(evt);
            }
        });
        getContentPane().add(cBoxSort, new org.netbeans.lib.awtextra.AbsoluteConstraints(905, 586, 112, 32));

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 14)); // NOI18N
        jLabel6.setText("SORT BY:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(837, 595, -1, -1));

        btnBack.setText("<<Back<<");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        getContentPane().add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(1048, 583, 109, 38));

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });
        getContentPane().add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 590, 359, -1));

        tblAdmins.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "AdminID", "Name", "Surname", "Username", "Password", "UserType", "Deactivate"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, true, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAdmins.getTableHeader().setReorderingAllowed(false);
        tblAdmins.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAdminsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblAdmins);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(333, 78, 867, 494));

        pnlHead.setBackground(new java.awt.Color(0, 0, 102));
        pnlHead.setForeground(new java.awt.Color(0, 0, 102));
        pnlHead.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtUserOutput.setFont(new java.awt.Font("Tribeca", 0, 24)); // NOI18N
        txtUserOutput.setForeground(new java.awt.Color(255, 255, 51));
        txtUserOutput.setText("Administrators");
        pnlHead.add(txtUserOutput, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 10, 498, 51));

        btnHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/help.png"))); // NOI18N
        btnHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHelpActionPerformed(evt);
            }
        });
        pnlHead.add(btnHelp, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 20, 36, 32));

        jTextField1.setBackground(new java.awt.Color(0, 0, 102));
        jTextField1.setForeground(new java.awt.Color(0, 0, 102));
        jTextField1.setBorder(null);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        pnlHead.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(787, 57, 93, 15));

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        pnlHead.add(btnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 23, -1, 30));

        getContentPane().add(pnlHead, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, -1));

        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/search.png"))); // NOI18N
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        getContentPane().add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(579, 300, 41, 20));

        btnSearch1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/search.png"))); // NOI18N
        btnSearch1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearch1ActionPerformed(evt);
            }
        });
        getContentPane().add(btnSearch1, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 590, 40, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtAdminNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAdminNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAdminNameActionPerformed

    private void txtAdminSurnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAdminSurnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAdminSurnameActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        //Makes sure no field is left empty
        if(txtAdminName.getText().isEmpty() || txtAdminSurname.getText().isEmpty() ){
            JOptionPane.showMessageDialog(null,"Please enter new administrator's details. Admin ID is set Automatically");
        }
        else{
            try {
                LogIn.dbman.addAdmin(txtAdminName.getText(), txtAdminSurname.getText(),txtUsername.getText()
                        ,txtPassword.getText(),getUserType(),chbxDeactivate.isSelected()); //uses addDevice method from DBManager class to add a new device
                  LogIn.dbman.Display(tblAdmins,PopulateQuery); //This allows the jtable to refresh and include the newly added record
                JOptionPane.showMessageDialog(null,"Record added successfully" );
                clear();
 
            } catch (SQLException ex) {
                Logger.getLogger(Devices.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null,"This username is taken ");
            }
      }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnhelp1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhelp1ActionPerformed
        JOptionPane.showMessageDialog(null,"Adding a new record: Enter the device name and type in the fields provided and press 'Add' \n"
            + "\nRemoving a record: Enter DeviceID of the record you want to remove. You can make use of the search bar \n"
            +"\nUpdating a record: simply select a record and its details will be filled in the text boxes, afterwards edit the fields you want to change\n"
            +"\nNote: DeviceID is generated automatically and user input will be ignored for the adding of a record"
        );
    }//GEN-LAST:event_btnhelp1ActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        //Makes sure field isn't emty
        if(txtAdminID.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Please enter the device id. You can\n"
                + " make use of the search bar to find the specific record you are looking for");
        }
        else {
            
            int a= JOptionPane.showConfirmDialog(null, " Deleting this Admin would also delete all records associated with them\n"
                                          + "If you wish to restric access using this account, simply enable the 'Deactivate' checkbox\n"
                                          + "Do you want continue to delete this Admin and all its records? ","Warning", JOptionPane.YES_NO_OPTION);  
            if(a==0){
            try {
                LogIn.dbman.RemoveAdmin(txtAdminID.getText());
                JOptionPane.showMessageDialog(null,"Record removed successfull" );
                refresh();      //This allows the jtable to refresh and include the newly added record
                clear();

                txtAdminID.setText("");
            } catch (SQLException ex) {
                Logger.getLogger(Devices.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println("Error: "+ ex);
                 JOptionPane.showMessageDialog(null,"This username is taken ");
            }
            }
        }

    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        Home home = new Home ();
        home.setVisible(true); //Goes back to home
        this.setVisible(false);
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
  
    }//GEN-LAST:event_txtSearchActionPerformed

    private void txtSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyPressed

    }//GEN-LAST:event_txtSearchKeyPressed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
    
    }//GEN-LAST:event_txtSearchKeyReleased

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        //To populate table as soon as this frame is opened
        refresh();
    }//GEN-LAST:event_formWindowOpened

    private void txtUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsernameActionPerformed
  
    }//GEN-LAST:event_txtUsernameActionPerformed

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed

    }//GEN-LAST:event_txtPasswordActionPerformed

    private void tblAdminsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAdminsMouseClicked
         // This puts the details of the selected record into the textfields
        int row =tblAdmins.getSelectedRow();
       String  AdminID =tblAdmins.getModel().getValueAt(row,0).toString();  // gets the DeviceID of the selected record by getting first column value 
       String  AName =tblAdmins.getModel().getValueAt(row,1).toString();
       String ASurname = tblAdmins.getModel().getValueAt(row,2).toString();
       String Usrnm = tblAdmins.getModel().getValueAt(row,3).toString();
       String Pass = tblAdmins.getModel().getValueAt(row,4).toString();
       int UType = (int) tblAdmins.getModel().getValueAt(row,5);
       Object Deact = (boolean) tblAdmins.getModel().getValueAt(row,6);
       
       txtAdminID.setText(AdminID);
       txtAdminName.setText(AName);
       txtAdminSurname.setText(ASurname );
       txtUsername.setText(Usrnm);
       txtPassword.setText(Pass);
       cbxUserType.setSelectedItem(cbox.indexOf(UType));
       chbxDeactivate.setSelected((boolean) Deact);

    }//GEN-LAST:event_tblAdminsMouseClicked

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
 
    }//GEN-LAST:event_formMouseClicked

    private void btnHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHelpActionPerformed
        JOptionPane.showMessageDialog(null,"Here you can see and edit details of an administrator or create one. "
                + "\nUse the drop down box to sort table by a column header of your choice. "
                + "\nYou can also type a name,Surname or Username into the search bar and press the search button to find their record. ");
    }//GEN-LAST:event_btnHelpActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        //Makes sure field isn't empty
        if(txtAdminID.getText().isEmpty() || txtAdminName.getText().isEmpty() || txtAdminSurname.getText().isEmpty() 
                || txtUsername.getText().isEmpty() || txtPassword.getText().isEmpty() ){
            JOptionPane.showMessageDialog(null,"Please fill in all the details of the Administrators");
        }
        else{
            try {
                LogIn.dbman.updateAdminInfo(txtAdminID.getText(), txtAdminName.getText(), txtAdminSurname.getText(), 
                        txtUsername.getText(),txtPassword.getText(),String.valueOf(getUserType()), chbxDeactivate.isSelected());//Updates db using the values entered by user
                refresh(); //displays data from database and also refreshes the jTable to include newly made Changes
                JOptionPane.showMessageDialog(null,"Record updated successfully" );
                clear();
                
            } catch (SQLException ex) {
                Logger.getLogger(Devices.class.getName()).log(Level.SEVERE, null, ex);
                 JOptionPane.showMessageDialog(null,"This username is taken ");
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void cbxUserTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxUserTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxUserTypeActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cBoxSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cBoxSortActionPerformed
        //Sorts table by heading chosen in combo box
        try {
        if(cBoxSort.getSelectedItem()== "Name"){
          
           
                LogIn.dbman.Sort(tblAdmins,"tblAdmin", "AdminName");
            
        }
            else if(cBoxSort.getSelectedItem()== "Surname"){
                LogIn.dbman.Sort(tblAdmins,"tblAdmin", "AdminSurname");
        }
            else if(cBoxSort.getSelectedItem()== "UserType"){
                 LogIn.dbman.Sort(tblAdmins,"tblAdmin", "UserType");
            }
            else if(cBoxSort.getSelectedItem()== "UserType"){
                LogIn.dbman.Sort(tblAdmins,"tblAdmin", "Deactivate");
            }
        } catch (SQLException ex) {
                Logger.getLogger(Administrators.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_cBoxSortActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        refresh();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed

    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnSearch1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearch1ActionPerformed
        //Checks if search bar is not empty then searches for what is entered
        if(txtSearch.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please enter something in the search box before pressing this button");
        }
        else {
            try {
                LogIn.dbman.Search(tblAdmins, txtSearch.getText());
            } catch (SQLException ex) {
                Logger.getLogger(Administrators.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
           
        
    }//GEN-LAST:event_btnSearch1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Administrators.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Administrators.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Administrators.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Administrators.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Administrators().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnHelp;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSearch1;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnhelp1;
    private javax.swing.JComboBox<String> cBoxSort;
    private javax.swing.JComboBox<String> cbxUserType;
    private javax.swing.JCheckBox chbxDeactivate;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lblAdmin;
    private javax.swing.JLabel lblDeactivate;
    private javax.swing.JLabel lblEdit;
    private javax.swing.JLabel lblEdit1;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblSurname;
    private javax.swing.JLabel lblUserType;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JPanel pnlHead;
    private javax.swing.JTable tblAdmins;
    private javax.swing.JTextField txtAdminID;
    private javax.swing.JTextField txtAdminName;
    private javax.swing.JTextField txtAdminSurname;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JLabel txtUserOutput;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
